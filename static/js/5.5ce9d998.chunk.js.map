{"version":3,"sources":["views/TrackCover.tsx","views/TrackCover.module.scss","views/PlaylistOverview.tsx","views/PlaylistOverview.module.scss","pages/LibraryPage.module.scss","pages/LibraryPage.tsx"],"names":["TrackCover","track","className","styles","cover","alt","title","src","artwork_url","replace","imgPlaceholder","onError","e","target","module","exports","PlaylistOverview","playlist","clickHandler","playlistOverview","onClick","covers","tracks","slice","map","idx","playlistInfo","name","length","LibraryPage","history","useHistory","playlists","useAppDispatch","useAppSelector","selectPlaylists","push"],"mappings":"+FAAA,oCA4BeA,IAtBf,YAII,IAAD,EAHDC,EAGC,EAHDA,MAIA,OACE,qBAAKC,UAAWC,IAAOC,MAAvB,SACE,qBACEC,IAAKJ,EAAMK,MAAQ,SACnBC,KACE,UAAAN,EAAMO,mBAAN,eAAmBC,QAAQ,iBAAkB,WAC1CC,IAELC,QAAS,SAACC,GACIA,EAAEC,OACVN,IAAMG,W,mBCpBpBI,EAAOC,QAAU,CAAC,MAAQ,4B,gCCD1B,2CAyCeC,IAjCf,YAMI,IALFC,EAKC,EALDA,SACAC,EAIC,EAJDA,aAMA,OACE,eAAC,IAAD,CACEhB,UAAWC,IAAOgB,iBAClBC,QAASF,EAFX,UAIE,qBAAKhB,UAAWC,IAAOkB,OAAvB,SACGJ,EAASK,OAAOC,MAAM,EAAG,GAAGC,KAAI,SAACvB,EAAOwB,GAAR,OAC/B,cAAC,IAAD,CAEExB,MAAOA,GADFwB,QAKX,sBAAKvB,UAAWC,IAAOuB,aAAvB,UACE,4BACGT,EAASU,OAEZ,8BACGV,EAASK,OAAOM,OADnB,IAC6BX,EAASK,OAAOM,OAAS,EAAK,QAAU,kB,mBCjC7Ed,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,OAAS,iCAAiC,aAAe,yC,mBCAzID,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,6B,gCCDrE,kEA4Bec,UAnBf,WACE,IAAMC,EAAUC,cAEVC,GADWC,cACCC,YAAeC,MAEjC,OACE,sBAAKjC,UAAWC,IAAO6B,UAAvB,UACE,oBAAI9B,UAAWC,IAAOG,MAAtB,uBACE0B,EAAWR,KAAI,SAACP,EAAUQ,GAAX,OACf,cAAC,IAAD,CAEER,SAAUA,EACVC,aAAc,kBAAMY,EAAQM,KAAR,oBAA0BnB,EAASU,SAFlDF","file":"static/js/5.5ce9d998.chunk.js","sourcesContent":["import styles from './TrackCover.module.scss';\n\nimport { SoundcloudTrack } from 'soundcloud';\nimport { imgPlaceholder } from 'utils/constants';\n\n\nfunction TrackCover({\n  track\n}: {\n  track: SoundcloudTrack;\n}) {\n  return (\n    <div className={styles.cover}>\n      <img\n        alt={track.title + ' cover'}\n        src={\n          track.artwork_url?.replace(/large(?=.jpg)/i, 'small')\n          || imgPlaceholder\n        }\n        onError={(e) => {\n          const img = e.target as HTMLImageElement;\n          img.src = imgPlaceholder;\n        }}\n      />\n    </div>\n  );\n}\n\nexport default TrackCover;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"TrackCover_cover__3GYvv\"};","import styles from './PlaylistOverview.module.scss';\n\nimport { Playlist } from 'app/playlistSlice';\n\nimport TrackCover from 'views/TrackCover';\nimport Button from 'components/Button';\n\n\nfunction PlaylistOverview({\n  playlist,\n  clickHandler\n}: {\n  playlist: Playlist;\n  clickHandler?: () => void;\n}) {\n\n  return (\n    <Button\n      className={styles.playlistOverview}\n      onClick={clickHandler}\n    >\n      <div className={styles.covers}>\n        {playlist.tracks.slice(0, 4).map((track, idx) =>\n          <TrackCover\n            key={idx}\n            track={track}\n          />\n        )}\n      </div>\n      <div className={styles.playlistInfo}>\n        <p>\n          {playlist.name}\n        </p>\n        <p>\n          {playlist.tracks.length} {(playlist.tracks.length > 1) ? 'songs' : 'song'}\n        </p>\n      </div>\n    </Button>\n  );\n}\n\nexport default PlaylistOverview;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playlistOverview\":\"PlaylistOverview_playlistOverview__kFYPC\",\"covers\":\"PlaylistOverview_covers__14WkO\",\"playlistInfo\":\"PlaylistOverview_playlistInfo__1vhdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playlists\":\"LibraryPage_playlists__2j-1v\",\"title\":\"LibraryPage_title__1wiO9\"};","import styles from './LibraryPage.module.scss';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAppSelector, useAppDispatch } from 'app/hooks';\nimport { selectPlaylists } from 'app/playlistSlice';\n\nimport PlaylistOverview from 'views/PlaylistOverview';\n\n\nfunction LibraryPage() {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const playlists = useAppSelector(selectPlaylists);\n\n  return (\n    <div className={styles.playlists}>\n      <h3 className={styles.title}>PLAYLISTS</h3>\n      {(playlists).map((playlist, idx) =>\n        <PlaylistOverview\n          key={idx}\n          playlist={playlist}\n          clickHandler={() => history.push(`/playlist/${playlist.name}`)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LibraryPage;\n"],"sourceRoot":""}